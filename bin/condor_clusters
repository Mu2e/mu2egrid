#!/usr/bin/perl -w
#
# A simple wrapper for condor_q to figure out what job clusters are still in the queue.
#
# A.Gaponenko, 2012
#
use strict;
use Getopt::Long;

#================================================================
sub usage() {
    return <<EOF
Usage: 

	condor_clusters [--brief] [username]

will display a list of all active condor clusters for the user and job
count in each cluster.  If the '--brief' options is given, just cluster
numbers are printed.

EOF
;
}

#================================================================
sub getUserClusters($) {
    my $username = shift;

    open(CQ, '-|', 'condor_q', $username)
	or die "Can not read condor_q output: $!\n";

    my %clusters;

    while(my $line = <CQ>) {
	chomp($line);
	my @fields = split(' ', $line);
#	print "got username = $username, fields = ". join('#', @fields) . "\n";
	if(($#fields > 5) && ($fields[1] eq $username)) {
	    my $cn = $fields[0];
	    $cn =~ s/\.\d*$//;

	    if(!defined($clusters{$cn})) {
		$clusters{$cn} = [0,0];
	    }

            # total job count
	    ++$clusters{$cn}[0];
            # running jobs count
	    if($fields[5] eq 'R') {
		++$clusters{$cn}[1];
	    }
	}
    }

    close CQ;

    return \%clusters;
}

#================================================================
my %opt = (help => 0, brief => 0);
GetOptions(\%opt, "help", "brief") or die "\nError processing command line options.\n";

if($opt{'help'} or ($#ARGV > 0)) {
    print usage();
}
else {
    my $brief = $opt{'brief'};

    my $user;
    if($#ARGV == 0) {
	$user = $ARGV[0];
    }
    else {
	$user = `whoami`;
	chomp($user);
    }

    my $clusters = getUserClusters($user);

    if(!$brief) {
	print "Cluster  \tnjobs\trunning\n";
    }

    foreach my $cn (sort(keys %$clusters)) {
	if($brief) {
	    print "$cn\n";
	}
	else {
	    print "$cn\t$$clusters{$cn}[0]\t$$clusters{$cn}[1]\n";
	}
    }
}

exit 0;

#================================================================
